
[tasks.gen-ssl-simple-certs-prepare]
private = true
workspace = false
env = { TEST_CERTS_DIR = "${ROOT_PROJECT_DIR}/target/generated-test-resources/ssl-simple" }
script = ''' mkdir -p "${TEST_CERTS_DIR}" '''



[tasks.del-ssl-simple-certs]
private = true
workspace = false
cwd = "${TEST_CERTS_DIR}"
script = [ "rm -f *.key *.crt *.cert *.pem *.csr *.srl" ]
dependencies = [ "gen-ssl-simple-certs-prepare" ]



[tasks.generate-ssl-simple-certs]
workspace = false
dependencies = [
    "gen-ssl-simple-certs-prepare",
    "gen-ssl-simple-certs--for-database",
    "gen-ssl-simple-certs--for-account-soa",
    "gen-ssl-simple-certs--for-account-web",
]

[tasks.regenerate-ssl-simple-certs]
workspace = false
dependencies = [
    "gen-ssl-simple-certs-prepare",
    "del-ssl-simple-certs",
    "generate-ssl-simple-certs",
]



[tasks.gen-ssl-simple-serv-cert]
private = true
workspace = false
script = '''
    openssl req -x509 -newkey rsa:4096 -sha256 -days 30            \
        -nodes                                                     \
        -keyout "${TEST_CERTS_DIR}/${SERV_NAME}.key.pem"           \
        -outform PEM -out "${TEST_CERTS_DIR}/${SERV_NAME}.crt.pem" \
        -subj "/CN=${SERV_NAME}"                                   \
        -addext subjectAltName=DNS:${SERV_NAME},DNS:localhost,DNS:${SERV_NAME}-0,DNS:${SERV_NAME}_0,DNS:${SERV_NAME}-1,DNS:${SERV_NAME}_1,DNS:${SERV_NAME}-2,DNS:${SERV_NAME}_2

    chmod ugo+r "${TEST_CERTS_DIR}/${SERV_NAME}.key.pem"

    # "-addext", "subjectAltName=DNS:rust-account-soa-0,DNS:*.example.com,IP:10.0.0.1",
    #
    # account-soa_0
    # account-soa-0 bank-plugin-account-soa_0
    # bank-plugin-account-soa-0 bank-plugin-tests-1661111370-account-soa_0 bank-plugin-tests-1661111370-account-soa-0
    # account-soa_1
    # account-soa-1 bank-plugin-account-soa_1
    # bank-plugin-account-soa-1 bank-plugin-tests-1661111370-account-soa_1 bank-plugin-tests-1661111370-account-soa-1
    # account-soa_2
    # account-soa-2 bank-plugin-account-soa_2
    # bank-plugin-account-soa-2 bank-plugin-tests-1661111370-account-soa_2 bank-plugin-tests-1661111370-account-soa-2

    #
    # mvv-bank localhost
    # mvv-bank_0 mvv-bank-0 bank-plugin-mvv-bank_0 bank-plugin-mvv-bank-0 bank-plugin-tests-1661111370-mvv-bank_0 bank-plugin-tests-1661111370-mvv-bank-0
    # mvv-bank_1 mvv-bank-1 bank-plugin-mvv-bank_1 bank-plugin-mvv-bank-1 bank-plugin-tests-1661111370-mvv-bank_1 bank-plugin-tests-1661111370-mvv-bank-1
    # mvv-bank_2 mvv-bank-2 bank-plugin-mvv-bank_2 bank-plugin-mvv-bank-2 bank-plugin-tests-1661111370-mvv-bank_2 bank-plugin-tests-1661111370-mvv-bank-2
'''
dependencies = ["gen-ssl-simple-certs-prepare"]



[tasks.gen-ssl-simple-certs--for-database]
private = true
workspace = false
condition = { files_not_exist = ["${TEST_CERTS_DIR}/database.key.pem", "${TEST_CERTS_DIR}/database.crt.pem"] }
extend = "gen-ssl-simple-serv-cert"
env = { SERV_NAME = "database" }
dependencies = ["gen-ssl-simple-certs-prepare"]

[tasks.gen-ssl-simple-certs--for-account-soa]
private = true
workspace = false
condition = { files_not_exist = ["${TEST_CERTS_DIR}/rust-account-soa.key.pem", "${TEST_CERTS_DIR}/rust-account-soa.crt.pem"] }
extend = "gen-ssl-simple-serv-cert"
env = { SERV_NAME = "rust-account-soa" }
dependencies = ["gen-ssl-simple-certs-prepare"]

[tasks.gen-ssl-simple-certs--for-account-web]
private = true
workspace = false
condition = { files_not_exist = ["${TEST_CERTS_DIR}/rust-account-web.key.pem", "${TEST_CERTS_DIR}/rust-account-web.crt.pem"] }
extend = "gen-ssl-simple-serv-cert"
env = { SERV_NAME = "rust-account-web" }
dependencies = ["gen-ssl-simple-certs-prepare"]




########################################################################################################################
#                                         Optional aliases                                                             #
########################################################################################################################

[tasks.generate-simple-certs]
workspace = false
alias = "gen-ssl-simple-certs"
[tasks.gen-simple-certs]
workspace = false
alias = "gen-ssl-simple-certs"

[tasks.regen-ssl-simple-certs]
workspace = false
alias = "regen-ssl-simple-certs"
[tasks.regenerate-simple-certs]
workspace = false
alias = "regen-ssl-simple-certs"
[tasks.regen-simple-certs]
workspace = false
alias = "regen-ssl-simple-certs"
