#ARG UBUNTU_VERSION=22.04
ARG UBUNTU_VERSION
# Your desktop version should be used.
# Otherwise you will need to add configuration steps for compatibility with
# local built exe file.
#
FROM ubuntu:${UBUNTU_VERSION}

ARG RUN_RUST_BACKTRACE=full

EXPOSE 80 8080 443 8443 8000 2735

LABEL rust-test-label-03=value-3

# Can also add: openssl, curl, postgresql-dev
RUN apt-get -qq update &&                         \
    apt-get -qq install libpq5 &&                 \
    apt-get -qq update && apt-get -qq install libssl-dev


# '--no-create-home' (and `--home "/nonexistent" --shell "/sbin/nologin"`) are not used
# to store code-coverage data in user home dir.
#
RUN adduser --gecos "" --home "/appuser" --uid "10001"  appuser
USER appuser


COPY target/debug/mvv_client_search_soa  ./bin/
#COPY target/debug/http_health_checker    ./bin/
COPY target/debug/health_checker         ./bin/
COPY thirdparty/grpcurl/grpcurl_1.9.1_linux_x86_64/grpcurl  ./bin/

ENV RUST_BACKTRACE=$RUN_RUST_BACKTRACE
ENTRYPOINT ["/bin/mvv_client_search_soa", "arg1", "arg2"]

# good param  --start-interval=2s is unstable ?!
#HEALTHCHECK --start-period=5s --interval=5s --timeout=3s --retries=6 CMD health_checker http://localhost:${SERVER_PORT}/healthcheck || exit 1
HEALTHCHECK  --start-period=1s --start-interval=1s --interval=1s --timeout=3s --retries=10 CMD grpcurl -d '{ "service": "" }' -cacert /certs/ca.crt.pem localhost:${SERVER_PORT} grpc.health.v1.Health/Check || exit 1
