
[workspace]
members = [
    "xtask",
    "tuple_heter_iter_macro",
    "tuple_heter_iter",
    "proc_macro",
    "error_macro",
    "common",
    "auth",
    "health_check",
    "account_soa",
    "client_search_grpc_soa",
    "account_web",
]
#resolver = "1"
resolver = "2"


# See
#  https://doc.rust-lang.org/cargo/reference/profiles.html
#  https://nnethercote.github.io/perf-book/build-configuration.html
#
[profile.release]
# Possible strip values: "none", "debuginfo", "symbols" (default "none")

# Use strip 'symbols' to strip both debug info and symbols
#strip = "symbols" # disables use of stack-trace (you will see just empty list of nothing)

# 'debuginfo' removes stack trace of inlined (due to optimization) functions
#strip = "debuginfo" # ok

##
#strip = "none"

# Similar to debug profile
#debug = true

# sizes
#  default 29M
#  strip 'none' 34M
#  strip 'debuginfo' 29M

#[workspace.build-dependencies]
#cargo_metadata = "0.18.1"
#cargo-progenitor = "0.7.0"
#syn = "2.0.72"
#prettyplease = "0.2.20"


[profile.dev.package.mvv_health_check] # make it equal to release
opt-level = 3
strip = true
debug = false
overflow-checks = false
debug-assertions = false
incremental = false
#panic = "abort"  #'unwind'    ??? `panic` may not be specified in a `package` profile ???

[profile.release.package.mvv_health_check] # make it equal to release
strip = true



[workspace.dependencies]
# build-dependencies
cargo_metadata = "0.18.1"
syn = "2.0.72"
prettyplease = "0.2.20"

quote = "1.0.36"
proc-macro2 = "1.0.82"
# proc-macro-crate = "3.1.0"

version_check = "0.9"
rustc_version = "0.4.1"

rust-embed = "8.5.0"

# dependencies
if_chain = "1.0.2"
cfg-if = "1.0.0"
#function_name = "0.3.0"

static_assertions = "1.1.0" # 4 years gao
static_assertions_next = "1.1.2" # probably successor of 'static_assertions' ??

const_format = "0.2.32"
const-str = "0.5.7"
place_macro = "1.0.0"

seq-macro = "0.3.5"
forr = "0.2.3"

bytes = "1.7.2"
bigdecimal = "0.4.3"
#bigdecimal = {  version = "0.4.3", features = ["default", "serde" ] }
iban = { version = "0.1.7", features = ["default"] }
uuid = { version = "1.10.0", features = ["default", "v4", "serde", ] }

trait-variant = "0.1.2"  # ???

serde = { version = "1.0.201", features = ["derive", "std", "rc", "serde_derive" ] }
serde_json = { version = "1.0.117", features = [ "default", ] }
#serde_json5 = "0.1.0
#serde_as = "0.0.1"
serde_with = "3.8.1"
#serde_with_macros = "3.8.1"
#display_json = "0.2.1"

anyhow = { version = "1.0.83"} # , features = ["backtrace"] } // it means third-party "backtrace"
thiserror = "1.0.60"
#snafu = "0.8.2"

indoc = "2.0.5"  # for creating multiline string

derivative = "2.2.0"
derive_more = { version = "1.0.0", features = ["full"] }  # (Struct) Display, and so on easy impl
educe = "0.6.0"
#derive_more = {  version = "0.99.18", features = ["default", "from_str"] }  # (Struct) Display, and so on easy impl
strum = "0.26"    # Enum Display, and so on easy impl
strum_macros = "0.26"

# Display generating by format
#display_attr = "0.1.1"
#parse-display = "0.9.1"
#derive_more = ...
#displaythis = "1.0.23"

## !!! Out dated !!!
## !!! backtrace = "0.3.71"

# # Seems it does not work.
# color-backtrace = "0.6.1"

# static (mutable) varibales support
ctor = "0.2.8"
once_cell = "1.19.0"
lazy_static = "1.4.0" # required for nutype
static_init = "1.0.3"
ptr_cell = "2.2.1"

regex = "1.10.5" # required for nutype

log = "0.4.21"
env_logger = "0.11.3"
log4rs = "1.3.0"
#tracing = "0.1.40"
tracing = {  version = "0.1.40", features = ["attributes", "log", ] }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
tracing-futures = "0.2.5"
#tracing-log = "0.2.0"
#tracing-attributes = "0.1.27"
tracing-timing = "0.6.0"

dotenv = "0.15.0"  # Loading env vars from .env file

inherent = "1.0.11"
readonly = "0.2.12"
extension-trait = "1.0.2"
ambassador = { version = "0.4.0" }  # Delegation support

smallvec = { version = "1.13.2", features = [] }
fixedstr = {  version = "0.5.7", features = ["serde"] }

num = "0.4.3"
nutype = {  version = "0.5.0", features = ["default", "regex", "serde", ] }
nonzero_lit = "0.1.2"

implicit-clone = {  version = "0.5.0", features = ["default", "derive", "implicit-clone-derive"] }

chrono = {  version = "0.4.38", features = ["default", "serde"] }
chrono-tz = "0.10.0"
time = "0.3.36"

#type-rules = { version = "0.2.3", features = ["derive", "regex", "serde"] }
type-rules = { version = "0.2.3", features = ["derive", "regex"] }

axum = { version = "0.7.5" , features = ["default", "macros"] }
# !! 'axum-server' is maintained by community independently from axum !!
axum-server = { version = "0.7.1", features = ["tls-rustls-no-provider"] }
#axum-handle-error-extract = "0.1.0"
async-trait = "0.1.80"
#axum = {  version = "0.7.5", features = ["default", "tracing", ] }
#tower = "0.4.13"
#tower = {  version = "0.4.13", features = ["full"] }
tower = { version = "0.5.0", features = ["full"] }
tower-service = { version = "0.3.3", features = [] }
tower-layer = { version = "0.3.3"}


#tower-http = "0.5.2"
tower-http = {  version = "0.5.2", features = ["default", "trace", "tracing"] }
tower-async-http = "0.2.0"

axum-login = {  version = "0.16.0" }
oauth2 = "4.4.2"
# support for Argon2, PBKDF2, and scrypt password hashing algorithms
password-auth = "1.0.0"
password-hash = {  version = "0.5.0", features = ["default", "std"] }
argon2 = { version = "0.5.3", features = ["default", "std", "password-hash"] }
pbkdf2 = { version = "0.12.2", features = ["default", "std", "password-hash", "simple"] }
scrypt = { version = "0.11.0", features = ["default", "std", "password-hash"] }
rand = { version = "0.8.5", features = ["default", "std", "getrandom", "rand_chacha" ] }
#getrandom = { version = "0.2.15", features = ["std", "core"]}
rand_hc = { version = "0.3.2" , features = [] }
rand_chacha = { version = "0.3.1", features = ["default", "std"] }
#rand_hc = { version = "*" , features = ["default", "getrandom"] }

#axum-auth = "0.7.0"
axum-extra = { version = "0.9.3", features = ["typed-header"] }
axum-ctx = "0.4.0"
#axum-handler-error = "0.1.1"
#axum-error = "0.2.0"
#axum-htpasswd = "0.2.0"
#axum-limit = ""
#axum-openapi = ""
#axum-request-validator = "0.1.0"
#axum-route = ""
#axum-swagger-ui = "0.3.0"
#axum-template = "2.3.0" # ++
axum-typed-routing = "0.2.1"
#axum_health = ""
axum_session_auth = "0.14.0"
axum_static = "1.7.1"
#axum-request-validator = "0.1.0"
axum-valid = { version = "0.20.0", features = ["default", "validify", "validator", "basic"] }
validator = {  version = "0.18.1", features = ["derive", "validator_derive"] }
#garde = { version = "0.20.0", features = ["derive"] }
validify = "1.4.0"
#axum_typed_multipart = "0.11.1"
#axum_static_include = "0.3.0"
jsonwebtoken = "9.3.0"

#tokio = { version = "1.38.0", features = ["rt", "rt-multi-thread"] }
#tokio = { version = "1.38.0", features = ["rt", "rt-multi-thread", "macros"] }
tokio = { version = "1.38.0", features = ["full", "rt", "macros"] }
tokio-stream = { version = "0.1.15", features = ["default", ] }
futures = { version = "0.3.30", features = ["default"] }
futures-util = { version = "0.3.30", features = ["default", "std", ] }
tokio-test = "0.4.4"
tokio-inherit-task-local = { version = "0.2.0", features = [] }
#tokio-async-await-test = "0.1.0"
#bytes = "1.6.0"

##pin-project = {version = "1.1.5", features = []}
pin-project-lite = { version = "0.2.14", features = [] }

rustls = { version = "0.23.12", default-features = false, features = ["ring", "logging", "std", "tls12", ] }
tokio-rustls = { version = "0.26.0", features = [], default-features = false }
rustls-webpki = "0.102.8"
rustls-pemfile = "2.1.3"
rustls-pki-types = "1.8.0"
#tokio-rustls = { version = "0.26.0", features = ["default", "ring", "early-data"]}

x509-parser = "0.16.0"

askama = { version = "0.12.1", features = ["with-axum"] }
askama_axum = "0.4.0"

openapiv3 = "2.0.0"

utoipa = { version = "4.2.3", features = [
    "default", "axum_extras",
    "decimal", "uuid", "url", "chrono",
    "debug",
    # "openapi_extensions", "yaml",
    # "preserve_order", "preserve_path_order",
] }
utoipa-swagger-ui = {  version = "7.1.0", features = [
    "default", "url", "debug", "debug-embed", "reqwest",
    "axum", "vendored",
] }
indexmap = "2.2.6"

#progenitor.workspace = true
# for generated code
base64 = "0.22.1"
regress = "0.10.0"

# HTTP
http = "1.1.0"
http-body = "1.0.1"
# http library
#hyper = "1.3.1"
hyper = { version = "1.4.1", features = ["default", "server"] }
reqwest = { version = "0.12.4", features = ["default", "json", "stream", "blocking"] }
url = "2.5.1"

#sqlx = { version = "0.7.4", features = ["runtime-tokio", "sqlite", "postgres", "sqlx-postgres", "chrono", "time", "bigdecimal", "tls-rustls", "runtime-tokio-rustls"] }
#sqlx = { version = "0.7.4", features = ["runtime-tokio", "sqlite", "postgres", "sqlx-postgres", "chrono", "time", "bigdecimal", "runtime-tokio-rustls"] }
sqlx = { version = "0.8.2", features = ["runtime-tokio", "sqlite", "postgres", "sqlx-postgres", "chrono", "time", "bigdecimal", "tls-rustls"] }
# Hm... Why I had to duplicate all options?
sqlx-postgres = { version = "0.8.2", features = ["bigdecimal", "chrono", "uuid"] }

diesel = { version = "2.2.3", features = ["default", "chrono", "uuid", "postgres", "r2d2"] }
diesel-async = { version = "0.5.0", features = ["default", "deadpool", "postgres", "r2d2"] }

quick_cache = "0.6.0"
#lru-cache = "0.1.2"
#xlru-cache = "0.1.2"
#lru_time_cache = "0.11.11"
lru = "0.12.3"
#clru = "0.6.2"
#fast-lru = "0.1.2"
#const-lru = "1.0.0"
#lru-mem = "0.3.0"
#lfu_cache = "1.3.0"
#lfu = "0.2.5"
#async_cache = "0.3.1"
#faststr = "0.2.19"
associative-cache = "2.0.0"

#inline-xml = "0.3.2"
## similars
#xml-macro = "0.2.0"
#quick-xml = "0.32.0"

itertools = "0.13.0"
by_address = "1.2.1"

#tuple_len = "3.0.0"
#tuple_length = "0.2.0"

progenitor = { version = "0.7.0" }
progenitor-impl = { version = "0.7.0" }
progenitor-client = { version = "0.7.0" }
#cargo-progenitor = { version = "0.7.0" }

fs_extra = "1.3.0"

tonic = { version = "0.12.2", features = ["default", "prost", "server", "codegen", "router"] }
tonic-types = {  version = "0.12.2", features = [] }
tonic-reflection = { version = "0.12.2", features = ["default", "server", "prost-types"]}
tonic-async-interceptor = { version = "0.12.0", features = []}
async-stream = { version = "0.3.5", features = [] }
tonic-build = { version = "0.12.2", features = ["default", "cleanup-markdown", "prost", "prost-build"] }
prost-build = { version = "0.13.2", features = ["default", "cleanup-markdown"] }

googleapis-tonic-google-type = { version = "0.7.0", features = ["default"]}
#googleapis-tonic-google-api = {  version = "0.7.0", features = ["default"] }
#googleapis-tonic = {  version = "0.7.0", features = ["default"] }
prost = { version = "0.13.1", features = ["default", "std", "prost-derive", "derive"] }
prost-types = { version = "0.13.1" , features = ["default", "std"] }

#tonic-health = { version = "0.12.2", features = ["default"]}
#grpcio = { version = "0.13.0", features = ["default", ] }
#grpcio-health = { version = "0.13.0", features = ["default"]}


#[workspace.dev-dependencies]

#mockall = "0.12.1"
#test-case = "3.3.1"
#test-case = "2.2.2"
test-case = "*"
assertables = "8.3.0"
assert-text = "0.2.10"
pretty_assertions = "1.4.1"

#assert_json = "0.1.0"
assert-json-diff = "2.0.2"

#jsondiff = "0.1.0"

#assert-str = "0.1.0"
#assert-text = "0.2.9"
#assert_eq_all = "0.1.1"
#assert_fn = "1.0.7"
#assert_json = "0.1.0" // requires 'thiserror v1.0.60 (*)'
#assert-call = "0.1.1"
#assert_no_alloc = "1.1.2"
#assert_approx_eq = "1.1.0"
#assert_that = "0.1.2"
#assert_panic_free = "1.0.2"
#assert_matches = "1.5.0"

# # Seems it does not work.
# color-backtrace = "0.6.1"
# ctor = "0.2.8"

rustainers = { version = "0.12.0", features = ["default", "regex"]}
## See https://www.zenrows.com/blog/rust-html-parser
# # Heavy dependency (probably very nice, but I need something simple for tests)
# html2text = { version = "0.12.5", features = ["default"] }
nanohtml2text = { version = "0.1.4" }

macro_rules_attribute = "0.2.0"

#[dev-dependencies]
yaml-rust2 = { version = "0.8.1" }


# With changed reqwest from version 11 to 12. Otherwise, project is not compiled :-(
[patch.crates-io]


[workspace.metadata.patch-replace-sub-dependencies.progenitor]
replace = [ { sub_dep = "reqwest", from_ver = "0.11.27", to_ver = "0.12.5" } ]
[workspace.metadata.patch-replace-sub-dependencies.progenitor-impl]
replace = [ { sub_dep = "reqwest", from_ver = "0.11.27", to_ver = "0.12.5" } ]
[workspace.metadata.patch-replace-sub-dependencies.progenitor-client]
replace = [ { sub_dep = "reqwest", from_ver = "0.11.27", to_ver = "0.12.5" } ]
#[workspace.metadata.patch-replace-sub-dependencies.cargo-progenitor]
#replace = [ { sub_dep = "reqwest", from_ver = "0.11.27", to_ver = "0.12.5" } ]



[patch.crates-io.progenitor]
version = "0.7.0"
path = "target/patch-override-sub-dep/progenitor/progenitor-0.7.0"

[patch.crates-io.progenitor-impl]
version = "0.7.0"
path = "target/patch-override-sub-dep/progenitor-impl/progenitor-impl-0.7.0"

[patch.crates-io.progenitor-client]
version = "0.7.0"
path = "target/patch-override-sub-dep/progenitor-client/progenitor-client-0.7.0"
