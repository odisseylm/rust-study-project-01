[package]
name = "mvv_auth"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html


#[profile.release]
#strip = "symbols"  # possible: "none", "debuginfo", "symbols" (default "none")


[features]
# Defines a feature named `webp` that does not enable any other features.
#error_generic_member_access = []

tonic = [ "dep:tonic", "dep:tonic-async-interceptor", "dep:tower-layer", "mvv_common/tonic" ]
ambassador = [ "dep:ambassador" ]
default = [ "ambassador", ]
#default = [ ]



[build-dependencies]
#cargo_metadata.workspace = true


[dependencies]
mvv_error_macro = { version = "0.1.0", path = "../error_macro" }
mvv_tuple_heter_iter_macro = { version = "0.1.0", path = "../tuple_heter_iter_macro" }
mvv_tuple_heter_iter = { version = "0.1.0", path = "../tuple_heter_iter" }
mvv_common = { version = "0.1.0", path = "../common" }

# -------------------------------------------------------------------------
if_chain.workspace = true
forr.workspace = true

static_assertions.workspace = true
#const_format ={ workspace = true }

const-str.workspace = true

trait-variant.workspace = true

#serde = { workspace = true, features = ["derive", "std", "rc", "serde_derive" ] }
serde.workspace = true

anyhow.workspace = true # , features = ["backtrace"] } // it means third-party "backtrace"
thiserror.workspace = true
# snafu.workspace = true
# backtrace.workspace = true  ## !!! Out dated !!!

indoc.workspace = true

strum.workspace = true
strum_macros.workspace = true


log.workspace = true
tracing.workspace = true


inherent.workspace = true
readonly.workspace = true
extension-trait.workspace = true
ambassador = { workspace = true, optional = true }
implicit-clone.workspace = true

num.workspace = true
uuid.workspace = true

axum.workspace = true

tonic = { workspace = true, optional = true }
tonic-async-interceptor = { workspace = true, optional = true }
tower-layer = { workspace = true, optional = true }

tower.workspace = true
tower-http.workspace = true
tower-async-http.workspace = true

axum-login.workspace = true
oauth2.workspace = true
# support for Argon2, PBKDF2, and scrypt password hashing algorithms
#password-auth.workspace = true
password-hash.workspace = true
argon2.workspace = true
pbkdf2.workspace = true
scrypt.workspace = true
rand.workspace = true
#getrandom.workspace = true
rand_hc.workspace = true
rand_chacha.workspace = true

rustls-pki-types.workspace = true

#axum-auth.workspace = true
axum-extra.workspace = true
axum-ctx.workspace = true
axum-typed-routing.workspace = true
axum_session_auth.workspace = true
jsonwebtoken.workspace = true

async-trait.workspace = true
tokio.workspace = true
tokio-test.workspace = true

http.workspace = true
hyper.workspace = true
reqwest.workspace = true
url.workspace = true

sqlx.workspace = true
sqlx-postgres.workspace = true

askama.workspace = true
askama_axum.workspace = true

itertools.workspace = true
#by_address.workspace = true


[dev-dependencies]
test-case.workspace = true
assertables.workspace = true
