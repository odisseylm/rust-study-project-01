
networks:
  rust-account-soa-net:
    name: container-runtime-tests

services:
  rust-account-soa:
    # 'extends' is not supported yet by io.fabric8 plugin
    # extends:
    #  service: account-soa
    #  file: ${BASE_DIR}/../account-soa/src/main/docker/docker-compose.yml
    #
    #image: ${DOCKER_IMAGE_PREFIX}rust-mvv-webapp-debug # mvv-registry/mvv.bank/pseudo2-account-soa
    image: rust-mvv-webapp-debug # mvv-registry/mvv.bank/pseudo2-account-soa
    networks:
      - rust-account-soa-net
    environment:
      # - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,address=*:8000,server=y,suspend=n

      - SERVER_PORT=8080
      - SERVER_SERVLET_CONTEXTPATH=/account-soa

      # - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/mvvbank
      # - SPRING_DATASOURCE_USERNAME=mvvbank
      # - SPRING_DATASOURCE_PASSWORD=psw
      - ACCOUNT_DATASOURCE_URL=jdbc:postgresql://database:5432/rust-mvvbank
      - ACCOUNT_DATASOURCE_USERNAME=rust-mvvbank
      - ACCOUNT_DATASOURCE_PASSWORD=psw

      - SERVER_SSL_KEYALIAS=account-soa
      - SERVER_SSL_KEYSTORE
      - SERVER_SSL_KEYSTORETYPE
      - SERVER_SSL_KEYSTOREPASSWORD
      - SERVER_SSL_KEYPASSWORD
      - SERVER_SSL_TRUSTSTORE
      - SERVER_SSL_TRUSTSTOREPASSWORD
    # volumes:
    #   - ./target/generated-test-resources/certs/:/certs/:readonly
    ports:
      # DOCKER_HOST_ACCOUNT_SOA_PORT_WITH_COLON=8095:
      # - 8095:8080
      - 8101:8080
      # - ${DOCKER_HOST_DEBUG_ACCOUNT_SOA_PORT_WITH_COLON}8000
    links:
      - database:db_postgres
    depends_on:
      - database
    deploy:
      #replicas: ${DOCKER_COMPOSE_SCALE_REPLICA_COUNT}
      replicas: 1


  database:
    # 'extends' is not supported yet by io.fabric8 plugin
    # extends:
    #  service: database
    #  file: ${BASE_DIR}/../account-soa/src/main/docker/docker-compose.yml
    #
    image: postgres:9
    #container_name: database
    #restart: no
    networks:
      - rust-account-soa-net
    hostname: database # required only for fabricio8 plugin
    environment:
      POSTGRES_DB: rust-mvvbank
      POSTGRES_USER: rust-mvvbank
      POSTGRES_PASSWORD: psw
    ports:
      # - ${DOCKER_HOST_POSTGRES_DB_PORT_WITH_COLON}5432
      - 5432:5432
    volumes:
      - ./../src/test_resources/postgres/init/:/docker-entrypoint-initdb.d/:readonly
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 6
    deploy:
      replicas: 1


#  apache-proxy:
#    image: httpd:2.4.51-alpine3.15
#    networks:
#      - rust-account-soa-net
#    ports:
#      - ${DOCKER_HOST_APACHE_PROXY_PORT_WITH_COLON}443
#    volumes:
#      - ./src/main/docker/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
#      - ./src/main/docker/apache/extra/httpd-ssl-mvv-root-bank.conf:/usr/local/apache2/conf/extra/httpd-ssl-mvv-root-bank.conf
#      - ./target/generated-test-resources/certs/dev-self-signed/:/certs/
#    deploy:
#      replicas: 1
